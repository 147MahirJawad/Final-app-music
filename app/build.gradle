apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.3"

    defaultConfig {
        applicationId "com.simplemobiletools.musicplayer"
        minSdkVersion 16
        targetSdkVersion 24
        versionCode 22
        versionName "1.22"
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'META-INF/library-compileDebugKotlin.kotlin_module'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:24.0.0'
    compile 'com.android.support:design:24.0.0'
    compile 'com.jakewharton:butterknife:8.0.1'
    compile 'com.squareup:otto:1.3.8'
    compile 'com.github.yukuku:ambilwarna:2.0.1'
    compile 'com.simplemobiletools:filepicker:1.5.4@aar'
    compile 'com.simplemobiletools:fileproperties:1.0.6@aar'
    compile 'com.github.bumptech.glide:glide:3.7.0' // remove when https://github.com/bumptech/glide/issues/882 is fixed
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    apt 'com.jakewharton:butterknife-compiler:8.0.1'
}

buildscript {
    ext.kotlin_version = '1.0.3'
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
    }
}

def Properties props = new Properties()
def propFile = new File('signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}
